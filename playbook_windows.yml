- name: Logging Setup für Windows EC2
  hosts: winhosts
  gather_facts: yes
  tasks:

    - name: Definiere Softwareliste
      set_fact:
        software_list:
          - msedge
          - notepad++
          - chrome

    - name: Prüfe Software-Status (Bare-metal oder Container)
      win_shell: |
        $proc = Get-Process -Name "{{ item }}" -ErrorAction SilentlyContinue
        if ($proc) {
            Write-Output "baremetal"
        } else {
            $docker = Get-Command docker -ErrorAction SilentlyContinue
            if ($docker) {
                $container = docker ps --filter "name={{ item }}" --format "{{ '{{.Names}}' }}"
                if ($container) { Write-Output "container" } else { Write-Output "none" }
            } else {
                Write-Output "none"
            }
        }
      register: software_status
      loop: "{{ software_list }}"
      loop_control:
        label: "{{ item }}"

    - name: Setze software_location für jede Software
      set_fact:
        software_info: >-
          {{
            software_info | default({}) |
            combine({ item.item: item.stdout })
          }}
      loop: "{{ software_status.results }}"

    - name: Prüfe, ob Logging existiert
      win_stat:
        path: C:\myapp\logging.conf
      register: log_file

    - name: Setze logging_needed
      set_fact:
        logging_needed: "{{ not log_file.stat.exists }}"

    - name: Erstelle Logging-Verzeichnis
      win_file:
        path: C:\myapp
        state: directory

    - name: Logging konfigurieren (nur wenn nötig)
      win_shell: |
        {% for sw, loc in software_info.items() %}
        "software={{ sw }}`nlocation={{ loc }}`nlogging_configured=yes" | Out-File -FilePath C:\myapp\logging.conf -Encoding UTF8 -Append
        {% endfor %}
      when: logging_needed

    - name: Erstelle Logfile mit Infos für S3 (mit Datum & Uhrzeit)
  win_shell: |
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    {% for sw, loc in software_info.items() %}
    "Timestamp: $timestamp`nSoftware: {{ sw }}`nLocation: {{ loc }}`nLoggingConfigured: yes`n---" | Out-File -FilePath C:\myapp\logging_info.txt -Encoding UTF8 -Append
    {% endfor %}


    - name: Lade Logfile zu S3
      win_shell: |
        Import-Module AWSPowerShell
        Write-S3Object -BucketName "ansible3testnow" -File "C:\myapp\logging_info.txt" -Key "logging_info_winhost.txt" -Region "eu-central-1"
